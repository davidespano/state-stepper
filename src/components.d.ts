/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface StateStepper {
    'resetSteps': (stepIndex?: number) => Promise<void>;
    'size': string;
    'stepBack': () => Promise<void>;
    'stepNext': (currentState: string, stop?: boolean) => Promise<boolean>;
  }
  interface StateStepperStep {
    'state': string;
  }
}

declare global {


  interface HTMLStateStepperElement extends Components.StateStepper, HTMLStencilElement {}
  var HTMLStateStepperElement: {
    prototype: HTMLStateStepperElement;
    new (): HTMLStateStepperElement;
  };

  interface HTMLStateStepperStepElement extends Components.StateStepperStep, HTMLStencilElement {}
  var HTMLStateStepperStepElement: {
    prototype: HTMLStateStepperStepElement;
    new (): HTMLStateStepperStepElement;
  };
  interface HTMLElementTagNameMap {
    'state-stepper': HTMLStateStepperElement;
    'state-stepper-step': HTMLStateStepperStepElement;
  }
}

declare namespace LocalJSX {
  interface StateStepper {
    'size'?: string;
  }
  interface StateStepperStep {
    'state'?: string;
  }

  interface IntrinsicElements {
    'state-stepper': StateStepper;
    'state-stepper-step': StateStepperStep;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'state-stepper': LocalJSX.StateStepper & JSXBase.HTMLAttributes<HTMLStateStepperElement>;
      'state-stepper-step': LocalJSX.StateStepperStep & JSXBase.HTMLAttributes<HTMLStateStepperStepElement>;
    }
  }
}


